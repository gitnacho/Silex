``MonologServiceProvider``
==========================

El proveedor ``MonologServiceProvider`` proporciona un mecanismo de registro predeterminado a través de la biblioteca `Monolog <https://github.com/Seldaek/monolog>`_ de Jordi Boggiano's.

Esta registrará las peticiones y errores y te permite añadir a tu aplicación el registro de depuración, para que ya no tengas que usar ``var_dump``. Puedes utilizar la versión madura llamada ``tail-f``.

Parámetros
----------

* **monolog.logfile**: Archivo donde escribir los registros.

* **monolog.level** (opcional): El nivel de registro por omisión es ``DEBUG``. Debe ser uno de ``Logger::DEBUG``, ``Logger::INFO``,
  ``Logger::WARNING``, ``Logger::ERROR``. ``DEBUG`` registra todo, ``INFO`` registrará todo excepto ``DEBUG``, etc.

* **monolog.name** (opcional): Nombre del canal de *Monplog*, por omisión es ``myapp``.

Servicios
---------

* **monolog**: La instancia del registro cronológico de *Monolog*.

  Ejemplo de uso::

    $app['monolog']->addDebug('Probando el registro cronológico de eventos de Monolog.');

* **monolog.configure**: Cierre protegido que toma al registro cronológico como argumento. Lo puedes modificar si no deseas el comportamiento predefinido.

Registrando
-----------

.. code-block:: php

    $app->register(new Silex\Provider\MonologServiceProvider(), array(
        'monolog.logfile' => __DIR__.'/development.log',
    ));

.. note::

    *Monolog* no viene en los archivos ``silex``, por lo tanto necesitas añadirlo como dependencia en tu archivo ``composer.json``:

    .. code-block:: json

        "require": {
            "monolog/monolog": ">=1.0.0",
        }

Uso
---

El proveedor ``MonologServiceProvider`` ofrece un servicio ``monolog``. Lo puedes utilizar para agregar entradas al registro para cualquier nivel de registro cronológico a través de ``addDebug()``, ``addInfo()``, ``addWarning()`` y ``addError()``::

    use Symfony\Component\HttpFoundation\Response;

    $app->post('/user', function () use ($app) {
        // ...

        $app['monolog']->addInfo(sprintf("User '%s' registered.", $username));

        return new Response('', 201);
    });

Para más información, consulta la `documentación de Monolog <https://github.com/Seldaek/monolog>`_.
